import os
import re
from openpyxl import Workbook
import pandas as pd

# Summary collector
summary_data = []

INPUT_FOLDER = 'results'

# Detect bank func

def detect_bank(text):
    """Detect bank from OCR text content."""
    text_lower = text.strip().lower()
    words = text.strip().lower().split()

    if words and words[0] == 'scb':
        return 'scb'
    
    elif words and words[0] == 'krungthai':
        return 'krungthai'
    
    elif re.search(r'\bgsb\b', text_lower) or '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô' in text_lower:
        return 'gsb'

    elif (
        (match_kbank_regex := re.search(r'(‡∏à‡∏≤‡∏Å|^)\s*[‡∏ô‡∏™‡∏¢]\.?\s*[\u0E00-\u0E7F\s\.]+‡∏ò\.?‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢', text)) or
        (has_kasikorn := '‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢' in text_lower) or
        (has_kbank := 'kbank' in text_lower) or
        (has_kplus := 'k+' in text_lower) or
        (has_make := 'ake' in text_lower)
    ):
        # üîç Show what matched
        # if match_kbank_regex:
        #     print("üîç Matched regex: sender name + ‡∏ò.‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢")
        #     print("‚Üí", match_kbank_regex.group())
        # elif has_kasikorn:
        #     print("üîç Matched: '‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢' in text_lower")
        # elif has_kbank:
        #     print("üîç Matched: 'kbank' in text_lower")
        # elif has_kplus:
        #     print("üîç Matched: 'k+' in text_lower")
        # elif has_make:
        #     print("üîç Matched: 'ake' in text_lower")

        return 'kbank'
    
    elif words and words[0] == 'bangkok':
        return 'bangkok'
    
    else:
        return 'unknown'
    
# Filter text
    
def handle_scb(text):
    print("üîÅ ‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå (SCB)")

    # ‡πÉ‡∏ä‡πâ re ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á
    lines = [line.strip() for line in text.split('\n') if line.strip()]
    
    # ‡πÉ‡∏ä‡πâ re ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏à‡∏≤‡∏Å"
    sender_name_match = re.search(r'‡∏à‡∏≤‡∏Å\s*([\u0E00-\u0E7F]+\s[\u0E00-\u0E7F]+\s?[\u0E00-\u0E7F]+)', text)
    sender_name = sender_name_match.group(1) if sender_name_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô'
    
    # ‡πÉ‡∏ä‡πâ re ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏à‡∏≤‡∏Å" (‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏µ‡∏î‡∏Å‡∏•‡∏≤‡∏á)
    sender_acc_match = re.search(r'((?:x{1,3}[\s-]?){1,2}\d{3,4}-?\d?)', text.lower())
    sender_acc = sender_acc_match.group(1) if sender_acc_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ'
    
    # ‡πÉ‡∏ä‡πâ re ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡πÑ‡∏õ‡∏¢‡∏±‡∏á"
    # ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ô.‡∏™. / ‡∏ô‡∏≤‡∏¢ / ‡∏ô‡∏≤‡∏á)
    receiver_name_match = re.search(  r'‡πÑ‡∏õ‡∏¢‡∏±‡∏á\s*((?:[‡∏ô‡∏™‡∏¢]\.?\s*)?(?:[\u0E00-\u0E7F\.]+(?:\s+[\u0E00-\u0E7F]+)*))', text)
    receiver_name = receiver_name_match.group(1).strip() if receiver_name_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö'

    # ‡πÉ‡∏ä‡πâ re ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡πÑ‡∏õ‡∏¢‡∏±‡∏á" (‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Å‡πá‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏µ‡∏î‡∏Å‡∏•‡∏≤‡∏á)
    receiver_acc_match = re.search(r'‡πÑ‡∏õ‡∏¢‡∏±‡∏á.*?((?:x{1,3}[\s-]?){1,2}\d{3,4}-?\d?)', text.lower())
    receiver_acc = receiver_acc_match.group(1) if receiver_acc_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"
    
    # ‡πÉ‡∏ä‡πâ re ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"
    amount_match = re.search(r'‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô\s*(\d{1,3}(?:,\d{3})*(?:\.\d{2})?)', text)
    amount = amount_match.group(1) if amount_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"

    # Output ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å OCR
    print("üë§ ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô:", sender_name)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", sender_acc)
    print("üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:", receiver_name)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", receiver_acc)
    print("üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:", amount)

    return {
        "sender_name": sender_name,
        "sender_bank": "‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå",
        "sender_acc": sender_acc,
        "receiver_name": receiver_name,
        "receiver_bank": "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",  # SCB slip ‡∏°‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
        "receiver_acc": receiver_acc,
        "amount": amount
    }

def handle_krungthai(text):
    print("üîÅ ‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢")

    # ‡πÉ‡∏ä‡πâ re ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á
    lines = [line.strip() for line in text.split('\n') if line.strip()]
    
    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà "‡∏à‡∏≤‡∏Å" ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏õ
    sender_segment = text[text.find("‡∏à‡∏≤‡∏Å"):text.find("‡πÑ‡∏õ‡∏¢‡∏±‡∏á") if "‡πÑ‡∏õ‡∏¢‡∏±‡∏á" in text else len(text)]
    # ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô
    sender_name_match = re.search(r'‡∏à‡∏≤‡∏Å\s*((?:[‡∏ô‡∏™‡∏¢]\.?\s*)?(?:[\u0E00-\u0E7F\.]+))', sender_segment)
    sender_name = sender_name_match.group(1).strip() if sender_name_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô'
    # ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô
    sender_bank_match = re.search(r'‡∏à‡∏≤‡∏Å\s+[\u0E00-\u0E7F\s.]+?\s+([\u0E00-\u0E7F]+)', sender_segment)
    sender_bank = sender_bank_match.group(1) if sender_bank_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô'
    # ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô
    sender_acc_match = re.search(r'(?:x{1,3}[\s-]?){1,2}\d{3,4}-?\d?', sender_segment.lower())
    sender_acc = sender_acc_match.group() if sender_acc_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ'

    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà "‡πÑ‡∏õ‡∏¢‡∏±‡∏á" ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏õ
    receiver_segment = text[text.find("‡πÑ‡∏õ‡∏¢‡∏±‡∏á"):text.find("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô") if "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô" in text else len(text)]
    # ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
    receiver_name_match = re.search(
        r'‡πÑ‡∏õ‡∏¢‡∏±‡∏á\s*((?:‡∏ô\.‡∏™\.|‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß|‡∏ô‡∏≤‡∏¢|‡∏ô‡∏≤‡∏á)?\s*[\u0E00-\u0E7F]+(?:\s[\u0E00-\u0E7F]+)?)',receiver_segment
    )
    receiver_name = receiver_name_match.group(1).strip() if receiver_name_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö'
    # ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
    receiver_bank_match = re.search(r'‡πÑ‡∏õ‡∏¢‡∏±‡∏á\s+[\u0E00-\u0E7F\s.]+?\s+([\u0E00-\u0E7F]+)?\s+([\u0E00-\u0E7F]+)?\s+([\u0E00-\u0E7F]+)', receiver_segment)
    receiver_bank = receiver_bank_match.group(3) if receiver_bank_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö'
    # ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
    receiver_acc_match = re.search(r'(?:x{1,3}[\s-]?){1,2}\d{3,4}-?\d?', receiver_segment.lower())
    receiver_acc = receiver_acc_match.group() if receiver_acc_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ'

    # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
    amount_match = re.search(r'‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô\s*(\d{1,3}(?:,\d{3})*(?:\.\d{2})?)', text)
    amount = amount_match.group(1) if amount_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"

    # Output ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    print("sender_segment:", sender_segment)
    print("receiver_segment:", receiver_segment)
    print("üë§ ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô:", sender_name)
    print("   ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£:", sender_bank)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", sender_acc)
    print("üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:", receiver_name)
    print("   ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£:", receiver_bank)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", receiver_acc)
    print("üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:", amount)

    # Return ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    return {
        'sender_name': sender_name,
        'sender_bank': sender_bank,
        'sender_acc': sender_acc,
        'receiver_name': receiver_name,
        'receiver_bank': receiver_bank,
        'receiver_acc': receiver_acc,
        'amount': amount
    }

def handle_gsb(text):
    print("üîÅ ‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô (GSB)")

    # Sender name
    sender_name_match = re.search(r'‡∏à‡∏≤‡∏Å\s+([‡∏ô‡∏≤‡∏¢|‡∏ô‡∏≤‡∏á|‡∏ô.‡∏™.|‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß]*[\u0E00-\u0E7F\s]+?)\s+‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô', text)
    sender_name = sender_name_match.group(1).strip() if sender_name_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô"

    # Sender bank
    sender_bank = "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô" if "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô" in text else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô"

    # Sender account
    sender_acc_match = re.search(r'‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô\s+(\d{4}x{4,}[\d]+)', text)
    sender_acc = sender_acc_match.group(1) if sender_acc_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô"

    # Receiver name: ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö "‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå" ‡πÅ‡∏•‡∏∞‡∏°‡∏µ . ‡∏´‡∏£‡∏∑‡∏≠ ~ ‡∏Ñ‡∏±‡πà‡∏ô
    receiver_name_match = re.search(
        r'‡∏ñ‡∏∂‡∏á\s+([‡∏ô‡∏≤‡∏¢|‡∏ô‡∏≤‡∏á|‡∏ô\.‡∏™\.|‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß]*[\u0E00-\u0E7F\s.]+?)\s+(?:‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô)?\s*(?:‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå|‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡πà‡∏≤‡∏¢)',
        text
    )
    receiver_name = receiver_name_match.group(1).strip() if receiver_name_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"

    # Receiver bank
    receiver_bank_match = re.search(r'(‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô)?\s*(‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå|‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡πà‡∏≤‡∏¢)', text)
    receiver_bank = receiver_bank_match.group(0).strip() if receiver_bank_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"

    # Receiver account: ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á, '‡πÄ‡∏≤‡∏á', ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ space ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á
    receiver_acc_match = re.search(
        r'(?:‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå|‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡πà‡∏≤‡∏¢)[\s\w]*?(\d{4}x{4,}[\d]+)', text
    )
    receiver_acc = receiver_acc_match.group(1) if receiver_acc_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"

    # Amount
    amount_match = re.search(r'‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô\s*(\d{1,3}(?:,\d{3})*(?:\.\d{2})?)', text)
    amount = amount_match.group(1) if amount_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"

    # Output ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å OCR
    print("üë§ ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô:", sender_name)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", sender_acc)
    print("üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:", receiver_name)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", receiver_acc)
    print("üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:", amount)

    return {
        "sender_name": sender_name,
        "sender_bank": "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô",
        "sender_acc": sender_acc,
        "receiver_name": receiver_name,
        "receiver_bank": receiver_bank,
        "receiver_acc": receiver_acc,
        "amount": amount
    }

def handle_kbank(text): 
    print("üîÅ ‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢ (KBank)")
    # Sender name
    sender_name_match = re.search(
        r'(?:‡∏ô\.‡∏™\.|‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß|‡∏ô‡∏≤‡∏¢|‡∏ô‡∏≤‡∏á)\s*[\u0E00-\u0E7F]+\s[\u0E00-\u0E7F\.]+',
        text
    )
    sender_name = sender_name_match.group() if sender_name_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô"

    # Sender bank (assume first ‡∏ò.‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢ after sender name)
    sender_bank_match = re.search(
        r'{}[\s.]*‡∏ò\.‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢'.format(re.escape(sender_name)),
        text
    )
    sender_bank = "‡∏ò.‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢" if sender_bank_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô"

    # Sender account (first masked pattern)
    sender_acc_match = re.search(
        r'(?:x{1,3}[\s\-]?){1,3}\d{3,4}-?(?:\d|x)?',
        text.lower()
    )
    sender_acc = sender_acc_match.group() if sender_acc_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô"

    # Receiver name (second name after first account)
    receiver_name_match = re.findall(
        r'(?:‡∏ô\.‡∏™\.|‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß|‡∏ô‡∏≤‡∏¢|‡∏ô‡∏≤‡∏á)\s*[\u0E00-\u0E7F]+\s[\u0E00-\u0E7F\.]+',
        text
    )
    receiver_name = receiver_name_match[1] if len(receiver_name_match) > 1 else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"

    # Receiver bank (second ‡∏ò.‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢)
    receiver_bank_match = re.findall(
        r'‡∏ò\.‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢',
        text
    )
    receiver_bank = receiver_bank_match[1] if len(receiver_bank_match) > 1 else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"

    # Receiver account (second masked pattern)
    receiver_acc_match = re.findall(
        r'(?:x{1,3}[\s\-]?){1,3}\d{3,4}-?(?:\d|x)?',
        text.lower()
    )
    receiver_acc = receiver_acc_match[1] if len(receiver_acc_match) > 1 else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"

    # Amount
    amount_match = re.search(
        r'‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:\s*([\d,]+\.\d{2})',
        text
    )
    amount = amount_match.group(1) if amount_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"

    # Output
    print("üë§ ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô:", sender_name)
    print("   ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£:", sender_bank)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", sender_acc)
    print("üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:", receiver_name)
    print("   ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£:", receiver_bank)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", receiver_acc)
    print("üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:", amount)

    return {
        "sender_name": sender_name,
        "sender_bank": "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢",
        "sender_acc": sender_acc,
        "receiver_name": receiver_name,
        "receiver_bank": receiver_bank,
        "receiver_acc": receiver_acc,
        "amount": amount
    }

def handle_bangkok(text): 
    print("üîÅ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û")
    # Sender name
    sender_name_match = re.search(r'‡∏à‡∏≤‡∏Å\s+(‡∏ô\.‡∏™\.|‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß|‡∏ô‡∏≤‡∏¢|‡∏ô‡∏≤‡∏á)\s*([\u0E00-\u0E7F]+)', text)
    sender_name = f"{sender_name_match.group(1)} {sender_name_match.group(2)}" if sender_name_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô"

    # Sender account (look for 3-digit + dash + masked)
    sender_acc_match = re.search(r'‡∏à‡∏≤‡∏Å.*?(\d{3}-\d(?:[\s\-]?[x\d]{3,6}))', text.lower())
    sender_acc = sender_acc_match.group(1) if sender_acc_match else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ'

    # Sender bank
    sender_bank = "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û" if "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û" in text else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô"

    # Receiver name (match first Thai full name after '‡πÑ‡∏õ‡∏ó‡∏µ‡πà')
    receiver_name_match = re.search(r'‡πÑ‡∏õ‡∏ó‡∏µ‡πà.*?(‡∏ô\.‡∏™\.|‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß|‡∏ô‡∏≤‡∏¢|‡∏ô‡∏≤‡∏á)?\s*([\u0E00-\u0E7F\s]+?)\s+\d{3}', text)
    receiver_name = f"{receiver_name_match.group(1)} {receiver_name_match.group(2).strip()}" if receiver_name_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"

    # Receiver account
    receiver_acc_match = re.search(r'‡∏à‡∏≤‡∏Å.*?(\d{3}-\d(?:[\s\-]?[x]{1,3}){0,2}[\s\-]?\d{2,4})', text.lower())
    receiver_acc = receiver_acc_match.group(1) if receiver_acc_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"

    # Receiver bank
    receiver_bank_match = re.search(r'‡πÑ‡∏õ‡∏ó‡∏µ‡πà.*?(‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£[\u0E00-\u0E7F]+)', text)
    receiver_bank = receiver_bank_match.group(1) if receiver_bank_match else ("‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå" if "‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå" in text else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö")

    # Amount
    amount_match = re.search(r'‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô\s*(\d{1,3}(?:,\d{3})*(?:\.\d{2})?)', text)
    amount = amount_match.group(1) if amount_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"

    # Output
    print("üë§ ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô:", sender_name)
    print("   ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£:", sender_bank)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", sender_acc)
    print("üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:", receiver_name)
    print("   ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á:", receiver_bank)
    print("   ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:", receiver_acc)
    print("üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:", amount)

    return {
        "sender_name": sender_name,
        "sender_bank": "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û",
        "sender_acc": sender_acc,
        "receiver_name": receiver_name,
        "receiver_bank": receiver_bank,
        "receiver_acc": receiver_acc,
        "amount": amount
    }

def handle_unknown(text): 
    print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏î‡πâ")

# Additional Functions
def log_data(file_name, bank, sender_name, sender_bank, sender_acc, receiver_name, receiver_bank, receiver_acc, amount):
    summary_data.append([
        file_name,
        bank,
        sender_name,
        sender_bank,
        sender_acc,
        receiver_name,
        receiver_bank,
        receiver_acc,
        amount
    ])

def write_to_excel(data, filename="output_summary.xlsx"):
    wb = Workbook()
    ws = wb.active
    ws.title = "Summary"

    headers = [
        "Filename", "Bank",
        "Sender Name", "Sender Bank", "Sender Account",
        "Receiver Name", "Receiver Bank", "Receiver Account",
        "Amount"
    ]
    ws.append(headers)

    for row in data:
        ws.append(row)

    wb.save(filename)
    print(f"\nüìÅ Exported summary to {filename}")

# Main Script

def main():
    data_rows = []

    for filename in os.listdir(INPUT_FOLDER):
        if filename.lower().endswith('.txt'):
            path = os.path.join(INPUT_FOLDER, filename)
            with open(path, 'r', encoding='utf-8') as f:
                text = f.read()

            bank = detect_bank(text)
            print(f"\nüìÑ File: {filename} ‚Üí Bank: {bank}")

            row = {
                "file": filename,
                "bank": bank,
                "sender_name": "-",
                "sender_bank": "-",
                "sender_acc": "-",
                "receiver_name": "-",
                "receiver_bank": "-",
                "receiver_acc": "-",
                "amount": "-"
            }

            if bank == 'scb':
                data = handle_scb(text)
            elif bank == 'krungthai':
                data = handle_krungthai(text)
            elif bank == 'kbank':
                data = handle_kbank(text)
            elif bank == 'bangkok':
                data = handle_bangkok(text)
            elif bank == 'gsb':
                data = handle_gsb(text)
            else:
                handle_unknown(text)
                data = {}

            # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô row ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ data ‡∏Ñ‡∏∑‡∏ô‡∏°‡∏≤
            if data:
                row.update(data)

            data_rows.append(row)

    # Export ‡πÄ‡∏õ‡πá‡∏ô .xlsx
    df = pd.DataFrame(data_rows)
    df.to_excel("output.xlsx", index=False)
    print("\n‚úÖ Exported to output.xlsx")

if __name__ == '__main__':
    main()